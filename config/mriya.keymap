/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
          &kp N1      &kp N2  &kp N3  &kp N4           &kp N5     &kp N6       &kp N7     &kp N8         &kp N9        &kp N0   &kp MINUS  &kp EQUAL
&kp LWIN  &kp TAB     &kp Q   &kp W   &kp E            &kp R      &kp T        &kp Y      &kp U          &kp I         &kp O    &kp P      &kp LEFT_BRACKET  &mt RWIN RBKT
          &kp ESCAPE  &kp A   &kp S   &kp D            &kp F      &kp G        &kp H      &kp J          &kp K         &kp L    &kp SEMI   &kp SINGLE_QUOTE
          &kp GRAVE   &kp Z   &kp X   &kp C            &kp V      &kp B        &kp N      &kp M          &kp COMMA     &kp DOT  &kp FSLH   &kp BACKSLASH
                              &mo 1   &kp RIGHT_SHIFT  &kp LCTRL  &kp ENTER    &kp SPACE  &kp BACKSPACE  &kp LEFT_ALT  &mo 2
            >;
        };

        lower_layer {
            bindings = <
        &trans          &trans    &trans  &trans          &trans     &trans       &trans     &trans    &trans        &trans    &trans    &trans
&trans  &kp UNDER       &kp F1    &kp F2  &kp F3          &kp F4     &kp F5       &kp F6     &kp F7    &kp F8        &kp F9    &kp F10   &kp F11          &mt RGUI F12
        &mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH        &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR      &kp LPAR  &kp RPAR  &mt RCTRL MINUS
        &mt LALT EQUAL  &kp N1    &kp N2  &kp N3          &kp N4     &kp N5       &kp N6     &kp N7    &kp N8        &kp N9    &kp N0    &trans
                                  &trans  &kp LEFT_SHIFT  &kp LCTRL  &mo 3        &trans     &trans    &kp LEFT_ALT  &mo 3
            >;
        };

        raise_layer {
            bindings = <
        &trans           &trans           &trans         &trans          &trans     &trans          &trans        &trans    &trans        &trans     &trans           &trans
&trans  &kp CAPS         &kp SLCK         &kp PG_UP      &kp PSCRN       &kp HOME   &kp C_VOL_UP    &kp C_VOL_UP  &kp HOME  &kp PSCRN     &kp PG_UP  &kp SLCK         &kp CAPS         &trans
        &mt LCTRL K_APP  &kp INS          &kp LEFT       &kp UP_ARROW    &kp RIGHT  &kp C_MUTE      &kp C_MUTE    &kp LEFT  &kp UP        &kp RIGHT  &kp INS          &mt RCTRL K_APP
        &kp DEL          &kp PAUSE_BREAK  &kp PAGE_DOWN  &kp DOWN_ARROW  &kp END    &kp C_VOL_DN    &kp C_VOL_DN  &kp END   &kp DOWN      &kp PG_DN  &kp PAUSE_BREAK  &kp DEL
                                          &mo 3          &kp LEFT_SHIFT  &kp LCTRL  &trans          &trans        &trans    &kp LEFT_ALT  &trans
            >;
        };

        adjust_layer {
            bindings = <
       &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
&none  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &none
       &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
       &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                                  &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
